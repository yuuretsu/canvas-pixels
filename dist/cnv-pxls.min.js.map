{"version":3,"file":"cnv-pxls.min.js","sources":["../src/extended-image-data.ts","../src/index.ts"],"sourcesContent":["import { Rgba, RgbaPointers } from \"./types\";\r\n\r\nexport class ExtendedImageData extends ImageData {\r\n  constructor(width: number, height: number) {\r\n    super(width, height);\r\n  }\r\n  private _getPointer(x: number, y: number) {\r\n    return (x + y * this.width) * 4;\r\n  }\r\n  private _getPointers(x: number, y: number): RgbaPointers {\r\n    const pointer = this._getPointer(x, y);\r\n    return [\r\n      pointer,\r\n      pointer + 1,\r\n      pointer + 2,\r\n      pointer + 3,\r\n    ];\r\n  }\r\n  setPixel(x: number, y: number, r: number, g: number, b: number, a: number) {\r\n    const pointers = this._getPointers(x, y);\r\n    this.data[pointers[0]] = r;\r\n    this.data[pointers[1]] = g;\r\n    this.data[pointers[2]] = b;\r\n    this.data[pointers[3]] = a;\r\n  }\r\n  getPixel(x: number, y: number): Rgba {\r\n    const pointers = this._getPointers(x, y);\r\n    return [\r\n      this.data[pointers[0]]!,\r\n      this.data[pointers[1]]!,\r\n      this.data[pointers[2]]!,\r\n      this.data[pointers[3]]!\r\n    ];\r\n  }\r\n}\r\n","import { ExtendedImageData } from \"./extended-image-data\";\n\nexport class Pixels {\n  readonly width: number;\n  readonly height: number;\n  private _data: ExtendedImageData;\n  readonly source: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  constructor(width: number, height: number, pixelSize: number) {\n    this.width = width;\n    this.height = height;\n    this._data = new ExtendedImageData(width, height);\n    this.source = document.createElement('canvas');\n    this.source.width = width;\n    this.source.height = height;\n    this.source.style.width = String(width * pixelSize) + \"px\";\n    this.source.style.height = String(height * pixelSize) + \"px\";\n    this.source.style.imageRendering = \"pixelated\";\n    this._ctx = this.source.getContext('2d')!;\n  }\n  setPixel(x: number, y: number, r: number, g: number, b: number, a: number) {\n    this._data.setPixel(x, y, r, g, b, a);\n  }\n  getPixel(x: number, y: number) {\n    return this._data.getPixel(x, y);\n  }\n  update() {\n    this._ctx.putImageData(this._data, 0, 0);\n  }\n  clear() {\n    this._data = new ExtendedImageData(this.width, this.height);\n    this._ctx.putImageData(this._data, 0, 0);\n  }\n}\n"],"names":["ExtendedImageData","ImageData","constructor","width","height","super","_getPointer","x","y","this","_getPointers","pointer","setPixel","r","g","b","a","pointers","data","getPixel","pixelSize","_data","source","document","createElement","style","String","imageRendering","_ctx","getContext","update","putImageData","clear"],"mappings":"oPAEaA,UAA0BC,UACrCC,YAAYC,EAAeC,GACzBC,MAAMF,EAAOC,GAEPE,YAAYC,EAAWC,GAC7B,OAA8B,GAAtBD,EAAIC,EAAIC,KAAKN,OAEfO,aAAaH,EAAWC,GAC9B,MAAMG,EAAUF,KAAKH,YAAYC,EAAGC,GACpC,MAAO,CACLG,EACAA,EAAU,EACVA,EAAU,EACVA,EAAU,GAGdC,SAASL,EAAWC,EAAWK,EAAWC,EAAWC,EAAWC,GAC9D,MAAMC,EAAWR,KAAKC,aAAaH,EAAGC,GACtCC,KAAKS,KAAKD,EAAS,IAAMJ,EACzBJ,KAAKS,KAAKD,EAAS,IAAMH,EACzBL,KAAKS,KAAKD,EAAS,IAAMF,EACzBN,KAAKS,KAAKD,EAAS,IAAMD,EAE3BG,SAASZ,EAAWC,GAClB,MAAMS,EAAWR,KAAKC,aAAaH,EAAGC,GACtC,MAAO,CACLC,KAAKS,KAAKD,EAAS,IACnBR,KAAKS,KAAKD,EAAS,IACnBR,KAAKS,KAAKD,EAAS,IACnBR,KAAKS,KAAKD,EAAS,qBCvBvBf,YAAYC,EAAeC,EAAgBgB,GACzCX,KAAKN,MAAQA,EACbM,KAAKL,OAASA,EACdK,KAAKY,MAAQ,IAAIrB,EAAkBG,EAAOC,GAC1CK,KAAKa,OAASC,SAASC,cAAc,UACrCf,KAAKa,OAAOnB,MAAQA,EACpBM,KAAKa,OAAOlB,OAASA,EACrBK,KAAKa,OAAOG,MAAMtB,MAAQuB,OAAOvB,EAAQiB,GAAa,KACtDX,KAAKa,OAAOG,MAAMrB,OAASsB,OAAOtB,EAASgB,GAAa,KACxDX,KAAKa,OAAOG,MAAME,eAAiB,YACnClB,KAAKmB,KAAOnB,KAAKa,OAAOO,WAAW,MAErCjB,SAASL,EAAWC,EAAWK,EAAWC,EAAWC,EAAWC,GAC9DP,KAAKY,MAAMT,SAASL,EAAGC,EAAGK,EAAGC,EAAGC,EAAGC,GAErCG,SAASZ,EAAWC,GAClB,OAAOC,KAAKY,MAAMF,SAASZ,EAAGC,GAEhCsB,SACErB,KAAKmB,KAAKG,aAAatB,KAAKY,MAAO,EAAG,GAExCW,QACEvB,KAAKY,MAAQ,IAAIrB,EAAkBS,KAAKN,MAAOM,KAAKL,QACpDK,KAAKmB,KAAKG,aAAatB,KAAKY,MAAO,EAAG"}